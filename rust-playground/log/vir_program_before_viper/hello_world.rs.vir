method builtin$havoc_bool() returns (ret: Bool);

method builtin$havoc_int() returns (ret: Int);

method builtin$havoc_ref() returns (ret: Ref());

struct_predicate str(self);


struct_predicate ref$str(self){
  (acc(self.val_ref, write)) && ((acc(str(self.val_ref), write)) && (true))
}


struct_predicate usize(self){
  (acc(self.val_int, write)) && (true)
}


struct_predicate u32(self){
  (acc(self.val_int, write)) && (true)
}


enum_predicate m_core$$num$opensqu$0$closesqu$$$IntErrorKind$opensqu$0$closesqu$$_beg_$_end_(self){
  discriminant=self.discriminant
  Empty: (self.discriminant) == (0) ==> struct_predicate m_core$$num$opensqu$0$closesqu$$$IntErrorKind$opensqu$0$closesqu$$_beg_$_end_Empty(self){
  true
}


  InvalidDigit: (self.discriminant) == (1) ==> struct_predicate m_core$$num$opensqu$0$closesqu$$$IntErrorKind$opensqu$0$closesqu$$_beg_$_end_InvalidDigit(self){
  true
}


  Overflow: (self.discriminant) == (2) ==> struct_predicate m_core$$num$opensqu$0$closesqu$$$IntErrorKind$opensqu$0$closesqu$$_beg_$_end_Overflow(self){
  true
}


  Underflow: (self.discriminant) == (3) ==> struct_predicate m_core$$num$opensqu$0$closesqu$$$IntErrorKind$opensqu$0$closesqu$$_beg_$_end_Underflow(self){
  true
}


}


struct_predicate m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$kind, write)) && ((acc(m_core$$num$opensqu$0$closesqu$$$IntErrorKind$opensqu$0$closesqu$$_beg_$_end_(self.f$kind), write)) && (true))
}


struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$u32$_sep_$m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_$_end_Ok(self){
  (acc(self.f$0, write)) && ((acc(u32(self.f$0), write)) && (true))
}


struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$u32$_sep_$m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_$_end_Err(self){
  (acc(self.f$0, write)) && ((acc(m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


enum_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$u32$_sep_$m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  discriminant=self.discriminant
  Ok: (self.discriminant) == (0) ==> struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$u32$_sep_$m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_$_end_Ok(self){
  (acc(self.f$0, write)) && ((acc(u32(self.f$0), write)) && (true))
}


  Err: (self.discriminant) == (1) ==> struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$u32$_sep_$m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_$_end_Err(self){
  (acc(self.f$0, write)) && ((acc(m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


}


struct_predicate isize(self){
  (acc(self.val_int, write)) && (true)
}


struct_predicate u8(self){
  (acc(self.val_int, write)) && (true)
}


struct_predicate m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_(self){
  true
}


struct_predicate m_core$$ptr$opensqu$0$closesqu$$$Unique$opensqu$0$closesqu$$_beg_$u8$_end_(self);


struct_predicate m_alloc$$raw_vec$opensqu$0$closesqu$$$RawVec$opensqu$0$closesqu$$_beg_$u8$_sep_$m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  (acc(self.f$ptr, write)) && ((acc(m_core$$ptr$opensqu$0$closesqu$$$Unique$opensqu$0$closesqu$$_beg_$u8$_end_(self.f$ptr), write)) && ((acc(self.f$cap, write)) && ((acc(usize(self.f$cap), write)) && ((acc(self.f$a, write)) && ((acc(m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_(self.f$a), write)) && (true))))))
}


struct_predicate m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$u8$_end_(self){
  (acc(self.f$buf, write)) && ((acc(m_alloc$$raw_vec$opensqu$0$closesqu$$$RawVec$opensqu$0$closesqu$$_beg_$u8$_sep_$m_alloc$$alloc$opensqu$0$closesqu$$$Global$opensqu$0$closesqu$$_beg_$_end_$_end_(self.f$buf), write)) && ((acc(self.f$len, write)) && ((acc(usize(self.f$len), write)) && (true))))
}


struct_predicate m_alloc$$string$opensqu$0$closesqu$$$String$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$vec, write)) && ((acc(m_alloc$$vec$opensqu$0$closesqu$$$Vec$opensqu$0$closesqu$$_beg_$u8$_end_(self.f$vec), write)) && (true))
}


struct_predicate ref$m_alloc$$string$opensqu$0$closesqu$$$String$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.val_ref, write)) && ((acc(m_alloc$$string$opensqu$0$closesqu$$$String$opensqu$0$closesqu$$_beg_$_end_(self.val_ref), write)) && (true))
}


struct_predicate ref$m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$u32$_sep_$m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  (acc(self.val_ref, write)) && ((acc(m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$u32$_sep_$m_core$$num$opensqu$0$closesqu$$$ParseIntError$opensqu$0$closesqu$$_beg_$_end_$_end_(self.val_ref), write)) && (true))
}


struct_predicate ref$ref$str(self){
  (acc(self.val_ref, write)) && ((acc(ref$str(self.val_ref), write)) && (true))
}


struct_predicate tuple1$ref$ref$str(self){
  (acc(self.tuple_0, write)) && ((acc(ref$ref$str(self.tuple_0), write)) && (true))
}


struct_predicate ref$tuple1$ref$ref$str(self){
  (acc(self.val_ref, write)) && ((acc(tuple1$ref$ref$str(self.val_ref), write)) && (true))
}


struct_predicate array$ref$str$2(self);


struct_predicate ref$array$ref$str$2(self){
  (acc(self.val_ref, write)) && ((acc(array$ref$str$2(self.val_ref), write)) && (true))
}


struct_predicate slice$ref$str(self);


struct_predicate ref$slice$ref$str(self){
  (acc(self.val_ref, write)) && ((acc(slice$ref$str(self.val_ref), write)) && (true))
}


struct_predicate m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_(self);


struct_predicate ref$u32(self){
  (acc(self.val_ref, write)) && ((acc(u32(self.val_ref), write)) && (true))
}


struct_predicate tuple1$ref$u32(self){
  (acc(self.tuple_0, write)) && ((acc(ref$u32(self.tuple_0), write)) && (true))
}


struct_predicate ref$tuple1$ref$u32(self){
  (acc(self.val_ref, write)) && ((acc(tuple1$ref$u32(self.val_ref), write)) && (true))
}


struct_predicate array$m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_$1(self);


struct_predicate ref$array$m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_$1(self){
  (acc(self.val_ref, write)) && ((acc(array$m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_$1(self.val_ref), write)) && (true))
}


struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Position$opensqu$0$closesqu$$_beg_$_end_At(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


enum_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Position$opensqu$0$closesqu$$_beg_$_end_(self){
  discriminant=self.discriminant
  Next: (self.discriminant) == (0) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Position$opensqu$0$closesqu$$_beg_$_end_Next(self){
  true
}


  At: (self.discriminant) == (1) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Position$opensqu$0$closesqu$$_beg_$_end_At(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


}


struct_predicate char(self){
  (acc(self.val_int, write)) && (true)
}


enum_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Alignment$opensqu$0$closesqu$$_beg_$_end_(self){
  discriminant=self.discriminant
  Left: (self.discriminant) == (0) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Alignment$opensqu$0$closesqu$$_beg_$_end_Left(self){
  true
}


  Right: (self.discriminant) == (1) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Alignment$opensqu$0$closesqu$$_beg_$_end_Right(self){
  true
}


  Center: (self.discriminant) == (2) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Alignment$opensqu$0$closesqu$$_beg_$_end_Center(self){
  true
}


  Unknown: (self.discriminant) == (3) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Alignment$opensqu$0$closesqu$$_beg_$_end_Unknown(self){
  true
}


}


struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_Is(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_Param(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


enum_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_(self){
  discriminant=self.discriminant
  Is: (self.discriminant) == (0) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_Is(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


  Param: (self.discriminant) == (1) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_Param(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


  NextParam: (self.discriminant) == (2) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_NextParam(self){
  true
}


  Implied: (self.discriminant) == (3) ==> struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_Implied(self){
  true
}


}


struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$FormatSpec$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$fill, write)) && ((acc(char(self.f$fill), write)) && ((acc(self.f$align, write)) && ((acc(m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Alignment$opensqu$0$closesqu$$_beg_$_end_(self.f$align), write)) && ((acc(self.f$flags, write)) && ((acc(u32(self.f$flags), write)) && ((acc(self.f$precision, write)) && ((acc(m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_(self.f$precision), write)) && ((acc(self.f$width, write)) && ((acc(m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Count$opensqu$0$closesqu$$_beg_$_end_(self.f$width), write)) && (true))))))))))
}


struct_predicate m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$position, write)) && ((acc(m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Position$opensqu$0$closesqu$$_beg_$_end_(self.f$position), write)) && ((acc(self.f$format, write)) && ((acc(m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$FormatSpec$opensqu$0$closesqu$$_beg_$_end_(self.f$format), write)) && (true))))
}


struct_predicate array$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$1(self);


struct_predicate ref$array$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$1(self){
  (acc(self.val_ref, write)) && ((acc(array$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$1(self.val_ref), write)) && (true))
}


struct_predicate tuple0$(self){
  true
}


struct_predicate m_std$$sys$opensqu$0$closesqu$$$unix$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Stdin$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$0, write)) && ((acc(tuple0$(self.f$0), write)) && (true))
}


struct_predicate m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$0, write)) && ((acc(m_std$$sys$opensqu$0$closesqu$$$unix$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Stdin$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


struct_predicate m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_Real(self){
  (acc(self.f$0, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


enum_predicate m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  discriminant=self.discriminant
  Real: (self.discriminant) == (0) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_Real(self){
  (acc(self.f$0, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


  Fake: (self.discriminant) == (1) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_Fake(self){
  true
}


}


struct_predicate m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_(self);


struct_predicate m_libc$$unix$opensqu$0$closesqu$$$notbsd$opensqu$0$closesqu$$$linux$opensqu$0$closesqu$$$pthread_mutex_t$opensqu$0$closesqu$$_beg_$_end_(self);


struct_predicate m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$m_libc$$unix$opensqu$0$closesqu$$$notbsd$opensqu$0$closesqu$$$linux$opensqu$0$closesqu$$$pthread_mutex_t$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  (acc(self.f$value, write)) && ((acc(m_libc$$unix$opensqu$0$closesqu$$$notbsd$opensqu$0$closesqu$$$linux$opensqu$0$closesqu$$$pthread_mutex_t$opensqu$0$closesqu$$_beg_$_end_(self.f$value), write)) && (true))
}


struct_predicate m_std$$sys$opensqu$0$closesqu$$$unix$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$inner, write)) && ((acc(m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$m_libc$$unix$opensqu$0$closesqu$$$notbsd$opensqu$0$closesqu$$$linux$opensqu$0$closesqu$$$pthread_mutex_t$opensqu$0$closesqu$$_beg_$_end_$_end_(self.f$inner), write)) && (true))
}


struct_predicate m_std$$sys_common$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$0, write)) && ((acc(m_std$$sys$opensqu$0$closesqu$$$unix$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


struct_predicate m_alloc$$boxed$opensqu$0$closesqu$$$Box$opensqu$0$closesqu$$_beg_$m_std$$sys_common$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  (acc(self.val_ref, write)) && ((acc(m_std$$sys_common$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$_end_(self.val_ref), write)) && (true))
}


struct_predicate m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$u8$_end_(self){
  (acc(self.f$value, write)) && ((acc(u8(self.f$value), write)) && (true))
}


struct_predicate m_core$$sync$opensqu$0$closesqu$$$atomic$opensqu$0$closesqu$$$AtomicBool$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$v, write)) && ((acc(m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$u8$_end_(self.f$v), write)) && (true))
}


struct_predicate m_std$$sys_common$opensqu$0$closesqu$$$poison$opensqu$0$closesqu$$$Flag$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$failed, write)) && ((acc(m_core$$sync$opensqu$0$closesqu$$$atomic$opensqu$0$closesqu$$$AtomicBool$opensqu$0$closesqu$$_beg_$_end_(self.f$failed), write)) && (true))
}


struct_predicate m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_(self){
  (acc(self.f$value, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_(self.f$value), write)) && (true))
}


struct_predicate m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_(self){
  (acc(self.f$inner, write)) && ((acc(m_alloc$$boxed$opensqu$0$closesqu$$$Box$opensqu$0$closesqu$$_beg_$m_std$$sys_common$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$_end_$_end_(self.f$inner), write)) && ((acc(self.f$poison, write)) && ((acc(m_std$$sys_common$opensqu$0$closesqu$$$poison$opensqu$0$closesqu$$$Flag$opensqu$0$closesqu$$_beg_$_end_(self.f$poison), write)) && ((acc(self.f$data, write)) && ((acc(m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_(self.f$data), write)) && (true))))))
}


struct_predicate m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$usize$_end_(self){
  (acc(self.f$value, write)) && ((acc(usize(self.f$value), write)) && (true))
}


struct_predicate m_core$$sync$opensqu$0$closesqu$$$atomic$opensqu$0$closesqu$$$AtomicUsize$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$v, write)) && ((acc(m_core$$cell$opensqu$0$closesqu$$$UnsafeCell$opensqu$0$closesqu$$_beg_$usize$_end_(self.f$v), write)) && (true))
}


struct_predicate m_alloc$$arc$opensqu$0$closesqu$$$ArcInner$opensqu$0$closesqu$$_beg_$m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_$_end_(self){
  (acc(self.f$strong, write)) && ((acc(m_core$$sync$opensqu$0$closesqu$$$atomic$opensqu$0$closesqu$$$AtomicUsize$opensqu$0$closesqu$$_beg_$_end_(self.f$strong), write)) && ((acc(self.f$weak, write)) && ((acc(m_core$$sync$opensqu$0$closesqu$$$atomic$opensqu$0$closesqu$$$AtomicUsize$opensqu$0$closesqu$$_beg_$_end_(self.f$weak), write)) && ((acc(self.f$data, write)) && ((acc(m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_(self.f$data), write)) && (true))))))
}


struct_predicate m_core$$ptr$opensqu$0$closesqu$$$NonNull$opensqu$0$closesqu$$_beg_$m_alloc$$arc$opensqu$0$closesqu$$$ArcInner$opensqu$0$closesqu$$_beg_$m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_$_end_$_end_(self);


struct_predicate m_core$$marker$opensqu$0$closesqu$$$PhantomData$opensqu$0$closesqu$$_beg_$m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_$_end_(self){
  true
}


struct_predicate m_alloc$$arc$opensqu$0$closesqu$$$Arc$opensqu$0$closesqu$$_beg_$m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_$_end_(self){
  (acc(self.f$ptr, write)) && ((acc(m_core$$ptr$opensqu$0$closesqu$$$NonNull$opensqu$0$closesqu$$_beg_$m_alloc$$arc$opensqu$0$closesqu$$$ArcInner$opensqu$0$closesqu$$_beg_$m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_$_end_$_end_(self.f$ptr), write)) && ((acc(self.f$phantom, write)) && ((acc(m_core$$marker$opensqu$0$closesqu$$$PhantomData$opensqu$0$closesqu$$_beg_$m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_$_end_(self.f$phantom), write)) && (true))))
}


struct_predicate m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Stdin$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$inner, write)) && ((acc(m_alloc$$arc$opensqu$0$closesqu$$$Arc$opensqu$0$closesqu$$_beg_$m_std$$sync$opensqu$0$closesqu$$$mutex$opensqu$0$closesqu$$$Mutex$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$buffered$opensqu$0$closesqu$$$BufReader$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Maybe$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$StdinRaw$opensqu$0$closesqu$$_beg_$_end_$_end_$_end_$_end_$_end_(self.f$inner), write)) && (true))
}


struct_predicate i32(self){
  (acc(self.val_int, write)) && (true)
}


enum_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_(self){
  discriminant=self.discriminant
  NotFound: (self.discriminant) == (0) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_NotFound(self){
  true
}


  PermissionDenied: (self.discriminant) == (1) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_PermissionDenied(self){
  true
}


  ConnectionRefused: (self.discriminant) == (2) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_ConnectionRefused(self){
  true
}


  ConnectionReset: (self.discriminant) == (3) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_ConnectionReset(self){
  true
}


  ConnectionAborted: (self.discriminant) == (4) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_ConnectionAborted(self){
  true
}


  NotConnected: (self.discriminant) == (5) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_NotConnected(self){
  true
}


  AddrInUse: (self.discriminant) == (6) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_AddrInUse(self){
  true
}


  AddrNotAvailable: (self.discriminant) == (7) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_AddrNotAvailable(self){
  true
}


  BrokenPipe: (self.discriminant) == (8) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_BrokenPipe(self){
  true
}


  AlreadyExists: (self.discriminant) == (9) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_AlreadyExists(self){
  true
}


  WouldBlock: (self.discriminant) == (10) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_WouldBlock(self){
  true
}


  InvalidInput: (self.discriminant) == (11) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_InvalidInput(self){
  true
}


  InvalidData: (self.discriminant) == (12) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_InvalidData(self){
  true
}


  TimedOut: (self.discriminant) == (13) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_TimedOut(self){
  true
}


  WriteZero: (self.discriminant) == (14) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_WriteZero(self){
  true
}


  Interrupted: (self.discriminant) == (15) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_Interrupted(self){
  true
}


  Other: (self.discriminant) == (16) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_Other(self){
  true
}


  UnexpectedEof: (self.discriminant) == (17) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_UnexpectedEof(self){
  true
}


  __Nonexhaustive: (self.discriminant) == (18) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end___Nonexhaustive(self){
  true
}


}


struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Custom$opensqu$0$closesqu$$_beg_$_end_(self);


struct_predicate m_alloc$$boxed$opensqu$0$closesqu$$$Box$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Custom$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  (acc(self.val_ref, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Custom$opensqu$0$closesqu$$_beg_$_end_(self.val_ref), write)) && (true))
}


struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_Os(self){
  (acc(self.f$0, write)) && ((acc(i32(self.f$0), write)) && (true))
}


struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_Simple(self){
  (acc(self.f$0, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_Custom(self){
  (acc(self.f$0, write)) && ((acc(m_alloc$$boxed$opensqu$0$closesqu$$$Box$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Custom$opensqu$0$closesqu$$_beg_$_end_$_end_(self.f$0), write)) && (true))
}


enum_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_(self){
  discriminant=self.discriminant
  Os: (self.discriminant) == (0) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_Os(self){
  (acc(self.f$0, write)) && ((acc(i32(self.f$0), write)) && (true))
}


  Simple: (self.discriminant) == (1) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_Simple(self){
  (acc(self.f$0, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$ErrorKind$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


  Custom: (self.discriminant) == (2) ==> struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_Custom(self){
  (acc(self.f$0, write)) && ((acc(m_alloc$$boxed$opensqu$0$closesqu$$$Box$opensqu$0$closesqu$$_beg_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Custom$opensqu$0$closesqu$$_beg_$_end_$_end_(self.f$0), write)) && (true))
}


}


struct_predicate m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$repr, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Repr$opensqu$0$closesqu$$_beg_$_end_(self.f$repr), write)) && (true))
}


struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$usize$_sep_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_$_end_Ok(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$usize$_sep_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_$_end_Err(self){
  (acc(self.f$0, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


enum_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$usize$_sep_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  discriminant=self.discriminant
  Ok: (self.discriminant) == (0) ==> struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$usize$_sep_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_$_end_Ok(self){
  (acc(self.f$0, write)) && ((acc(usize(self.f$0), write)) && (true))
}


  Err: (self.discriminant) == (1) ==> struct_predicate m_core$$result$opensqu$0$closesqu$$$Result$opensqu$0$closesqu$$_beg_$usize$_sep_$m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_$_end_Err(self){
  (acc(self.f$0, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$error$opensqu$0$closesqu$$$Error$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


}


struct_predicate slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_(self);


struct_predicate ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.val_ref, write)) && ((acc(slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_(self.val_ref), write)) && (true))
}


struct_predicate m_core$$option$opensqu$0$closesqu$$$Option$opensqu$0$closesqu$$_beg_$ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$_end_Some(self){
  (acc(self.f$0, write)) && ((acc(ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


enum_predicate m_core$$option$opensqu$0$closesqu$$$Option$opensqu$0$closesqu$$_beg_$ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$_end_(self){
  discriminant=self.discriminant
  None: (self.discriminant) == (0) ==> struct_predicate m_core$$option$opensqu$0$closesqu$$$Option$opensqu$0$closesqu$$_beg_$ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$_end_None(self){
  true
}


  Some: (self.discriminant) == (1) ==> struct_predicate m_core$$option$opensqu$0$closesqu$$$Option$opensqu$0$closesqu$$_beg_$ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$_end_Some(self){
  (acc(self.f$0, write)) && ((acc(ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_(self.f$0), write)) && (true))
}


}


struct_predicate slice$m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_(self);


struct_predicate ref$slice$m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.val_ref, write)) && ((acc(slice$m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_(self.val_ref), write)) && (true))
}


struct_predicate m_core$$fmt$opensqu$0$closesqu$$$Arguments$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.f$pieces, write)) && ((acc(ref$slice$ref$str(self.f$pieces), write)) && ((acc(self.f$fmt, write)) && ((acc(m_core$$option$opensqu$0$closesqu$$$Option$opensqu$0$closesqu$$_beg_$ref$slice$m_core$$fmt$opensqu$0$closesqu$$$rt$opensqu$0$closesqu$$$v1$opensqu$0$closesqu$$$Argument$opensqu$0$closesqu$$_beg_$_end_$_end_(self.f$fmt), write)) && ((acc(self.f$args, write)) && ((acc(ref$slice$m_core$$fmt$opensqu$0$closesqu$$$ArgumentV1$opensqu$0$closesqu$$_beg_$_end_(self.f$args), write)) && (true))))))
}


struct_predicate ref$m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Stdin$opensqu$0$closesqu$$_beg_$_end_(self){
  (acc(self.val_ref, write)) && ((acc(m_std$$io$opensqu$0$closesqu$$$stdio$opensqu$0$closesqu$$$Stdin$opensqu$0$closesqu$$_beg_$_end_(self.val_ref), write)) && (true))
}


